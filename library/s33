#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
   Ansible module for AWS S3 based on boto3.
   Support ivan.bogomazov@gmail.com
   Minsk 2016

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
"""
import os
import tempfile
import filecmp

from shutil import copyfile

import boto3
from ansible.module_utils.basic import AnsibleModule

class S3api(object):
    """boto3 S3 class"""
    def __init__(self, access_key, secret_key, session_token):
        self.client = boto3.client(
            's3',
            aws_access_key_id=access_key,
            aws_secret_access_key=secret_key,
            aws_session_token=session_token,
        )

    def download(self, params):
        _downloaded = tempfile.NamedTemporaryFile(
            mode='w+b',
            prefix='ansible_',
            delete=False
        )

        with _downloaded as data:
            self.client.download_fileobj(
                params.get('bucket', None),
                params.get('object', None),
                data
            )

        return _downloaded.name

    def get(self, params):
        downloaded_file = self.download(params)
        dest_file = params['dest']

        dest_existed = os.path.exists(dest_file)

        if dest_existed:
            if filecmp.cmp(downloaded_file, dest_file, shallow=False):
                os.remove(downloaded_file)
                return {
                    'changed': False,
                    'dest': dest_file
                }
        try:
            copyfile(downloaded_file, dest_file)
            os.remove(downloaded_file)
        except IOError as exception:
            return {
                'failed': True,
                'msg': "I/O error({0}): {1}".format(exception.errno, exception.strerror)
            }

        return {
            'changed': True,
            'dest': dest_file
        }

    def list(self, params):
        return {
            'dataset': self.client.list_objects(
                Bucket=params.get('bucket', None),
            ),
            'changed': True
        }

    def delete(self, params):
        return {
            'deleted': self.client.delete_object(
                Bucket=params.get('bucket', None),
                Key=params.get('object', None)
            ),
            'changed': True
        }

    def put(self, params):
        with open(params.get('src', None), 'rb') as data:
            pushed = self.client.put_object(
                ACL='private',
                Body=data,
                Bucket=params.get('bucket', None),
                Key=params.get('object', None)
            )
        return {
            'pushed': pushed,
            'changed': True
        }


def main():
    module = AnsibleModule(
        argument_spec=dict(
            mode=dict(required=True, choise=['get', 'put', 'delete', 'list']),
            bucket=dict(required=True, type='str'),
            object=dict(default=None, type='str'),
            dest=dict(default=None, type='str'),
            src=dict(default=None, type='str'),
            access_key=dict(default=None, type='str', aliases=['aws_access_key']),
            secret_key=dict(default=None, type='str', no_log=True, aliases=['aws_secret_key, aws_access_secret_key']),
            session_token=dict(default=None, type='str'),
        )
    )

    s3 = S3api(
        module.params['access_key'],
        module.params['secret_key'],
        module.params['session_token'],
    )

    if module.params['mode'] == 'get':
        module.exit_json(**s3.get(module.params))
    elif module.params['mode'] == 'list':
        module.exit_json(**s3.list(module.params))
    elif module.params['mode'] == 'delete':
        module.exit_json(**s3.delete(module.params))
    elif module.params['mode'] == 'put':
        module.exit_json(**s3.put(module.params))


# include magic from lib/ansible/module_common.py
#<<INCLUDE_ANSIBLE_MODULE_COMMON>>
if __name__ == '__main__':
    main()
